#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// changed lwr and rse

#define DEF 0
#define GAM 1
#define RSE 2
#define LWR 3
#define ADJ 4
#define FN  5

/ {
    macros {
        Phone: Phone {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N7 &kp N2 &kp N6 &kp N8 &kp N6 &kp N8 &kp N4 &kp N8 &kp N5 &kp N4>;
            label = "PHONE";
        };

        Pwd: Pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N9 &kp N9 &kp N0 &kp N8 &kp N0 &kp N5>;
            label = "PWD";
        };

        Address: Address {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp N1 &kp N2 &kp N1 &kp N0 &kp N9>;
            label = "ADDRESS";
        };
    };

    behaviors {
        Shft_caps: Shft_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPSLOCK>;

            tapping-term-ms = <350>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC                            &kp Q     &kp W     &kp E  &kp R      &kp T  &kp Y     &kp U          &kp I      &kp O    &kp P        &kp BSPC
&mt LCTRL TAB                      &kp A     &kp S     &kp D  &kp F      &kp G  &kp H     &kp J          &kp K      &kp L    &kp RET
&mt LSHFT CAPSLOCK                 &kp Z     &kp X     &kp C  &kp V      &kp B  &kp N     &kp M          &kp COMMA  &kp DOT  &lt 1 SLASH
&kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp LALT  &kp LGUI  &mo 2  &kp SPACE  &mo 3  &kp RGUI  &kp LG(SPACE)
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3     &kp N4    &kp N5  &kp N6     &kp N7     &kp N8    &kp N9   &kp N0  &trans
&trans  &none   &none   &kp GRAVE  &kp BSLH  &none   &kp MINUS  &kp EQUAL  &kp SEMI  &kp SQT  &trans
&trans  &none   &none   &none      &none     &none   &kp LBKT   &kp RBKT   &none     &none    &trans
&trans  &trans  &trans  &trans     &trans    &trans  &trans     &trans
            >;
        };

        layer_2 {
            bindings = <
&none  &none  &none          &none          &kp LG(LA(M))  &kp LG(O)  &none           &none             &kp UP    &none      &none  &none
&none  &none  &kp LG(LA(T))  &kp LA(ENTER)  &kp LC(ENTER)  &kp LC(O)  &none           &kp LEFT          &kp DOWN  &kp RIGHT  &none
&none  &Pwd   &Phone         &Address       &none          &none      &kp LS(LG(UP))  &kp LS(LG(DOWN))  &none     &none      &none
&none  &none  &none          &none          &none          &none      &none           &none
            >;
        };

        layer_3 {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7  &kp F8           &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans           &trans  &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans           &trans  &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans  &rgb_ug RGB_TOG
            >;
        };
    };
};
